local keymap = vim.keymap

vim.g.mapleader = " "

keymap.set("i", "jk", "<Esc>", { desc = "exit insert mode with jk" })
keymap.set("n", "-", vim.cmd.Ex, { desc = "activate netrw" })
keymap.set("n", "H", "^", { desc = "move to beginning of a line" })
keymap.set("n", "L", "$", { desc = "move to end of a line" })
keymap.set("n", "<C-d>", "<C-d>zz", { desc = "move cursor to center when paging down" })
keymap.set("n", "<C-u>", "<C-u>zz", { desc = "move cursor to center when paging up" })
keymap.set("n", "n", "nzzzv", { desc = "improve n command" })
keymap.set("n", "N", "Nzzzv", { desc = "improve N command" })
keymap.set("n", "<Leader>rw", [[:%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>]], { desc = "replace word" })
keymap.set("v", "J", ":m '>+1<CR>gv=gv", { desc = "move lines up in visual mode and autoindent" })
keymap.set("v", "K", ":m '<-2<CR>gv=gv", { desc = "move lines down in visual mode and autoindent" })
keymap.set("v", "<", "<gv", { desc = "improve indenting in visual mode" })
keymap.set("v", ">", ">gv", { desc = "improve indenting in visual mode" })
keymap.set("v", "p", '"_dP', { desc = "improve pasting in visual mode" })
keymap.set("n", "sw", "<C-w>w", { desc = "go to next window" })
keymap.set("n", "so", "<C-w>o", { desc = "close other windows" })
keymap.set("n", "sh", "<C-w>h", { desc = "move to left window" })
keymap.set("n", "sj", "<C-w>j", { desc = "move to down window" })
keymap.set("n", "sk", "<C-w>k", { desc = "move to up window" })
keymap.set("n", "sl", "<C-w>l", { desc = "move to right window" })
keymap.set("n", "st", "<C-w>T", { desc = "open window in new tab" })
keymap.set("n", "sv", "<C-w>v", { desc = "create window vsplit" })
keymap.set("n", "ss", "<C-w>s", { desc = "create window split" })
keymap.set("n", "s=", "<C-w>=", { desc = "make all windows same width" })
keymap.set("n", "s,", "20<C-w><", { desc = "decrease window width" })
keymap.set("n", "s.", "20<C-w>>", { desc = "increase window width" })
keymap.set("n", "s+", "10<C-w>+", { desc = "increase window height" })
keymap.set("n", "s-", "10<C-w>-", { desc = "decrease window height" })
keymap.set("t", "<Esc>", [[<C-\><C-n>]], { desc = "terminal escape" })
keymap.set("n", "Q", "<nop>", { desc = "Q sucks" })
keymap.set("n", "<Leader>q", ":quit<CR>", { desc = "[q]uit file" })
keymap.set("n", "<Leader>s", ":update<CR>", { desc = "[s]ave file" })
keymap.set("n", "<Leader>ez", ":e ~/.zshrc", { desc = "[e]dit [z]shrc file" })
keymap.set("n", "<Leader>cl", function()
	local word = vim.fn.expand("<cword>")
	vim.cmd("norm! oconsole.log({ ")
	vim.cmd(string.format("norm! a%s })", word))
end, { desc = "[C]onsole [L]og" })

-- Diagnostic keymaps
vim.diagnostic.config({ float = { border = "rounded" }, virtual_text = false })
vim.keymap.set("n", "[d", function()
	vim.diagnostic.goto_prev({ float = true })
end, { desc = "Go to previous [D]iagnostic message" })
vim.keymap.set("n", "]d", function()
	vim.diagnostic.goto_next({ float = true })
end, { desc = "Go to next [D]iagnostic message" })
vim.keymap.set("n", "<leader>d", vim.diagnostic.open_float, { desc = "Open floating [d]iagnostic message" })
vim.keymap.set("n", "<leader>q", vim.diagnostic.setloclist, { desc = "Open diagnostic [Q]uickfix list" })
